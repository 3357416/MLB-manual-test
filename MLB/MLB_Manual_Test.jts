// *************************Jail Test Script File************************************************
// Product:				
// Customer:			
// Software Name:		
// Author:              
// **********************************************************************************************
// **********************************************************************************************

#include<"C:\\JabilTest\\scripts\\MLB\\MLBInstrumentsFunctions.jts">
#include<"C:\\JabilTest\\scripts\\init.jts">
#include<"C:\\JabilTest\\scripts\\MLB\\resTests.jts">
#include<"C:\\JabilTest\\scripts\\MLB\\vdcTests.jts">
#include<"C:\\JabilTest\\scripts\\CSV_report_generator.jts">
#include<"C:\\JabilTest\\scripts\\antitester\\Mod_Mes.jts">
#include<"C:\\JabilTest\\scripts\\MLB\\FlashMCU.jts">




// MAIN TEST ROUTINE
// 
// **********************************************************************************************
$headersCSV = "";
 $MeasuringsCSV = "";
//PSU tests

call Header();

call DMMSetRemoteMode();
call PSUSetRemoteMode();

call preTestSetup();

//Short tests from resTests.jts
call RASHres();
call PlatfomPowres();
call DoorLatchres();
call UserBoardPowres();
call IntakeFanres();
call TecPowres();
call PlatformHallres();
call PerimeterEarHeaterres();
call DrainHoleres();
call RoofHeaterres();
call RoofNtcInspectionres();
call RoofSensorsP5res();
call Shieldres();

call preProgConnectPSU();

//Psu functions from MLBinstrumentFunctions.jts

call PSUOutputOn();
call PSUVoltTest();
call PSUCurrTest();
call PSUOutputOff();

call preProgConnectPogramer();
Sleep(3);
call PSUOutputOn();

//From FlashMCU.jts

call FlashingMCU();
call PSUOutputOff();
Sleep(3);
OperatorPrompt("Desconecte el programador", "OK");
call PSUOutputOn();

//vdc Tests
call RASHvdc();
call PlatfomPowvdc();
call DoorLatchvdc();
call UserBoardPowvdc();
call IntakeFanvdc();
call TecPowvdc();
call PlatformHallvdc();
call PerimeterEarHeatervdc();
call DrainHolevdc();
call RoofHeatervdc();
call RoofNtcInspectionvdc();
call RoofSensorsP5vdc();
call RoofSensorsP8vdc();


call PSUOutputOff();
call releasePSU();
call releaseDMM();
call CSV_generator();






End;

// 
// **********************************************************************************************

$FileContentsHeaders = Array1DCreate("String", 1); 

// 
// **********************************************************************************************
function Header()
{
  UpdateStatus("**********************************************************************************************");
  UpdateStatus("Skydio")
  UpdateStatus("MLB Manual Test v1")
  UpdateStatus("**********************************************************************************************");
  UpdateStatus("");
  
  $outString = "Serial Number: " + $SerialNumber;
  UpdateStatus($outString);
  
  $format = "MM/dd/yyyy h:mm:ss.ffff tt";

  $time = GetSystemTimeWithFormat($format);

  // Print out the time.
  $outString = "Date and time: " + $time;
  UpdateStatus($outString);
  UpdateStatus("");
  UpdateStatus("**********************************************************************************************");

  return;
}

// **********************************************************************************************
// **********************************************************************************************

function operatorPrompt()
{
    ///////////////////OPERATOR PROMPT UUT//////////////////
  
    
   // $PictureMode = "STRETCH"; // Define el modo de visualización de la imagen (centrado).
    //$WindowHeight = 720; // Define la altura de la ventana de la imagen.
   // $WindowWidth = 1200; // Define el ancho de la ventana de la imagen.

    //OperatorPicturePrompt($PromptString, $GraphicFilePath, $PictureMode, $WindowHeight, $WindowWidth); // Muestra la imagen y solicita la interacción del operador.
    
  
    ///////////////////Counter//////////////////
  
    //$ImagePath = New("String", $GraphicFilePath);
    //OperatorCountDownTimer("Midiendo en:", 5, true); 
  
   // ShowDelayPicture($ImagePath,1200,700,100,5);
  
    ///////////////////Measure//////////////////
  
   // UpdateStatus("measuring"); // Muestra el nombre de la prueba en el estado.
    
    return;
  }
  
  
// **********************************************************************************************
// **********************************************************************************************
function preTestSetup()
{
    $PromptString = "Conecte la punta NEGRA del multimetro a la terminal de tierra";
    $GraphicFilePath = "C:\\JabilTest\\scripts\\MLB\\PTSground.jpg";
    $PictureMode = "STRETCH"; // Define el modo de visualización de la imagen (centrado).
    $WindowHeight = 720; // Define la altura de la ventana de la imagen.
    $WindowWidth = 1200; // Define el ancho de la ventana de la imagen.

    OperatorPicturePrompt($PromptString, $GraphicFilePath, $PictureMode, $WindowHeight, $WindowWidth); // Muestra la imagen y solicita la interacción del operador.
  
  
  
    $PromptString = "Instale el arnes en el conector de E-Stop";
    $GraphicFilePath = "C:\\JabilTest\\scripts\\MLB\\eStopHarness.jpg";
    $PictureMode = "STRETCH"; // Define el modo de visualización de la imagen (centrado).
    $WindowHeight = 720; // Define la altura de la ventana de la imagen.
    $WindowWidth = 1200; // Define el ancho de la ventana de la imagen.

    OperatorPicturePrompt($PromptString, $GraphicFilePath, $PictureMode, $WindowHeight, $WindowWidth); // Muestra la imagen y solicita la interacción del operador.
  
  return;
}

// **********************************************************************************************
// **********************************************************************************************

function preProgConnectPSU()
{
   $PromptString = "Conecte la unidad a la fuente por el conector indicado en la imagen:";
    $GraphicFilePath = "C:\\JabilTest\\scripts\\MLB\\DUT2PSU.jpg";
    $PictureMode = "STRETCH"; // Define el modo de visualización de la imagen (centrado).
    $WindowHeight = 720; // Define la altura de la ventana de la imagen.
    $WindowWidth = 1200; // Define el ancho de la ventana de la imagen.

    OperatorPicturePrompt($PromptString, $GraphicFilePath, $PictureMode, $WindowHeight, $WindowWidth); // Muestra la imagen y solicita la interacción del operador.
  
  return;
  }
  
  // **********************************************************************************************
// **********************************************************************************************

  function preProgConnectPogramer()
  {
    
     $PromptString = "Conecte la unidad a la fuente por el conector indicado en la imagen:";
    $GraphicFilePath = "C:\\JabilTest\\scripts\\MLB\\conProg.jpg";
    $PictureMode = "STRETCH"; // Define el modo de visualización de la imagen (centrado).
    $WindowHeight = 720; // Define la altura de la ventana de la imagen.
    $WindowWidth = 1200; // Define el ancho de la ventana de la imagen.

    OperatorPicturePrompt($PromptString, $GraphicFilePath, $PictureMode, $WindowHeight, $WindowWidth); // Muestra la imagen y solicita la interacción del operador.
  
    
    return;
    }
    
    
    
    
    
    
// **********************************************************************************************
// **********************************************************************************************
   
    
    
